set-option -sa terminal-overrides ",xterm*:Tc"
set-option -sg escape-time 10
set-option -g status-interval 10

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g terminal-overrides ",xterm-256color:Tc"

curr_win_color="#ad75f3"

set -g status-position bottom
set -g status-bg color234
set -g status-fg white
set -g status-left-length 80

session_fg="#617A94"
session_bg="#404040"
dark_fg="#121212"
dark_bg="#5a3d7e"
dark_bg="#3c2854"
light_fg="#F0F0F0"

left_win_number_bg="${session_fg}"

divider=" #[fg=#a76eee]ÓÇµ#[fg=${light_fg}] "

set -g status-left "#[bg=${dark_bg},fg=${light_fg}] "
set -ag status-left "#(~/.dotfiles/pub/tmux/custom/platform.sh)"
set -ag status-left "$divider"
set -ag status-left "${USER}"
set -ag status-left "$divider"
set -ag status-left "#S"
# set -ag status-left "$divider"
# set -ag status-left "üå∂Ô∏è #{window_name}#{?window_zoomed_flag, Ó©∞,}"
set -ag status-left " #[bg=default,fg=${dark_bg}]ÓÇ¥   "

set -g status-justify left

set -g status-right-length 120
set -g status-right ''
set -ag status-right "#(~/.dotfiles/pub/tmux/custom/aws.sh)"
set -ag status-right "#(~/.dotfiles/pub/tmux/custom/k8s.sh)"
set -ag status-right "#(~/.dotfiles/pub/tmux/custom/vpn.sh)"

window_format="#[bg=default,fg=default]#{?window_active,#[fg=$curr_win_color]ÔÅ°,} #{window_name}#{?window_zoomed_flag, Ó©∞,} #[bg=default,fg=default]"
# window_format="#[bg=default,fg=default]#{?window_active,#[fg=$session_fg]Óªø,#[bg=default,fg=$session_fg]ÓÇ∂#[bg=$session_fg,fg=color255]#{window_name}#{?window_zoomed_flag, Ó©∞,}#[bg=default,fg=$session_fg]ÓÇ¥} #[bg=default,fg=default]"

set -g window-status-format "$window_format"
set -g window-status-current-format "$window_format"

is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'

tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'

if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# 'Thanks to me to spending time with this sh*t

unbind C-u
bind C-u switch-client -T pane_table

bind -T pane_table 1 split-window -h -c "#{pane_current_path}" \; \
    resize-pane -R 35 \; \
	select-pane -L \; \
    switch-client -T root

bind -T pane_table 2 split-window -h -c "#{pane_current_path}" \; \
    resize-pane -R 35 \; \
	split-window -v -c "#{pane_current_path}" \; \
	select-pane -U \; \
    select-pane -L \;\
    switch-client -T root

bind -T pane_table 3 split-window -h -c "#{pane_current_path}" \; \
    resize-pane -R 35 \; \
	split-window -v -c "#{pane_current_path}" \; \
	select-pane -L \; \
	split-window -v -c "#{pane_current_path}" \; \
	resize-pane -D 20 \; \
	select-pane -U \; \
    switch-client -T root

# Session Switcher
unbind s
bind s display-popup -B -E "
  sh -c '
    create=\"Û∞êï Create new\"
    sel=\$((echo \"\$create\"; tmux list-sessions -F \"#{session_id}: #S\") \
      | fzf --reverse \
            --layout=reverse \
            --border=\"double\" \
            --header=\"Session List\" \
            --header-first \
            --header-border=\"sharp\" \
            --ghost=\"Filter sessions\" \
            --list-border=\"bold\" \
            --pointer=Ôë† \
            --marker=‚úì \
            --prompt=\"‚ùØ \")
    sess=\$(echo \$sel | cut -d: -f1)

    if [ \"\$sel\" = \"\$create\" ]; then
        COLOR=\"\033[1;35m\"
        BOLD=\"\033[1m\"
        RESET=\"\033[0m\"
        read -p \"\${COLOR}\${BOLD}Session name: \${RESET}ÔÅî \" sname
        tmux new -d -s \"\$sname\"
        tmux switch-client -t \"\$sname\"
    else
        tmux switch-client -t \"\$sess\"
    fi
  '
"

# Window Switcher
unbind w
bind w display-popup -B -E "
  sh -c '
    sel=\$(tmux list-windows -F \"#{window_index}: #{window_name}\" \
      | fzf --reverse \
            --layout=reverse \
            --border=\"double\" \
            --header=\"Window List\" \
            --header-first \
            --header-border=\"sharp\" \
            --ghost=\"Filter windows\" \
            --list-border=\"bold\" \
            --pointer=Ôë† \
            --marker=‚úì \
            --prompt=\"‚ùØ \")
    idx=\$(echo \$sel | cut -d: -f1 )
    tmux select-window -t \$idx
  '
"

# popup terminal
unbind t
bind t display-popup -w 80% -h 80% -E

# session name
unbind ,
bind $ display-popup -h 3 -w 60 -E "
    sh -c '
        COLOR=\"\033[1;35m\"
        BOLD=\"\033[1m\"
        RESET=\"\033[0m\"
        read -p \"\${COLOR}\${BOLD}Session name: \${RESET}ÔÅî \" sname
        tmux rename-session \"\$sname\"
    '
"

# window name
unbind ,
bind , display-popup -h 3 -w 60 -E "
    sh -c '
        COLOR=\"\033[1;35m\"
        BOLD=\"\033[1m\"
        RESET=\"\033[0m\"
        read -p \"\${COLOR}\${BOLD} Window name: \${RESET}ÔÅî \" wname
        tmux rename-window \"\$wname\"
    '
"

set-window-option -g mode-keys vi

bind  c  new-window      -c "#{pane_current_path}"
bind  %  split-window -h -c "#{pane_current_path}"
bind '"' split-window -v -c "#{pane_current_path}"
bind '`' split-window -h -c "#{pane_current_path}" \; send-keys "note" Enter

# Start windows and panes at 1, not 0
set -g base-index 1
setw -g pane-base-index 1
set -g renumber-windows on

# Resizing panes
bind-key -r h resize-pane -L 10
bind-key -r j resize-pane -D 10
bind-key -r k resize-pane -U 10
bind-key -r l resize-pane -R 10

# Move window numbers
unbind C-h
bind C-h swap-window -t -1 -d
unbind C-l
bind C-l swap-window -t +1 -d

# Zen Mode
bind-key -r C-z set-option status

# Reload config
bind-key -r r source-file ~/.config/tmux/tmux.conf

set-option -g mouse on

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'

