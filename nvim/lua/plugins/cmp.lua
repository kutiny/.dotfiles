return {
    -- {
    --     'zbirenbaum/copilot.lua',
    --     lazy = true,
    --     cmd = { 'Copilot' },
    --     opts = { panel = { enabled = false }, suggestion = { enabled = false } },
    --     event = { 'InsertEnter', 'LspAttach', 'BufReadPre', 'BufNewFile' },
    -- },
    -- {
    --     'zbirenbaum/copilot-cmp',
    --     event = { 'InsertEnter', 'LspAttach', 'BufReadPre', 'BufNewFile' },
    --     lazy = true,
    --     dependencies = { 'zbirenbaum/copilot.lua' },
    --     config = function()
    --         require('copilot_cmp').setup({
    --             fix_pairs = true
    --         })
    --     end
    -- },
    -- {
    --     'hrsh7th/nvim-cmp',
    --     event = { 'InsertEnter' },
    --     dependencies = {
    --         'L3MON4D3/LuaSnip',
    --         'hrsh7th/cmp-nvim-lsp',
    --         'hrsh7th/cmp-path',
    --         'hrsh7th/cmp-buffer',
    --         'saadparwaiz1/cmp_luasnip',
    --         'onsails/lspkind.nvim',
    --     },
    --     config = function()
    --         vim.api.nvim_set_hl(0, "CmpItemKindCopilot", { fg = "#6CC644" })
    --
    --         local cmp = require('cmp')
    --         local lspkind = require('lspkind')
    --
    --         cmp.setup({
    --             snippet = {
    --                 expand = function(args)
    --                     require('luasnip').lsp_expand(args.body)
    --                 end,
    --             },
    --             window = {
    --                 -- completion = cmp.config.window.bordered(),
    --                 -- documentation = cmp.config.window.bordered(),
    --             },
    --             mapping = cmp.mapping.preset.insert({
    --                 ['<C-b>'] = cmp.mapping.scroll_docs(-4),
    --                 ['<C-f>'] = cmp.mapping.scroll_docs(4),
    --                 ['<C-Space>'] = cmp.mapping.complete(),
    --                 ['<C-e>'] = cmp.mapping.abort(),
    --                 ['<CR>'] = cmp.mapping.confirm({ select = false, behavior = cmp.ConfirmBehavior.Replace }), -- Accept currently selected item. Set `select` to `false` to only confirm explicitly selected items.
    --             }),
    --             sources = cmp.config.sources({
    --                 { name = 'nvim_lsp', max_item_count = 20 },
    --                 { name = 'luasnip',  max_item_count = 10 },
    --             }, {
    --                 { name = 'buffer', max_item_count = 10 },
    --                 { name = 'copilot',  max_item_count = 3 },
    --             }),
    --             formatting = {
    --                 format = lspkind.cmp_format({
    --                     mode = "symbol",
    --                     max_width = 50,
    --                     symbol_map = {
    --                         Copilot = "",
    --                         Text = "󰉿",
    --                         Method = "󰆧",
    --                         Function = "󰊕",
    --                         Constructor = "",
    --                         Field = "󰜢",
    --                         Variable = "󰀫",
    --                         Class = "󰠱",
    --                         Interface = "",
    --                         Module = "",
    --                         Property = "󰜢",
    --                         Unit = "󰑭",
    --                         Value = "󰎠",
    --                         Enum = "",
    --                         Keyword = "󰌋",
    --                         Snippet = "",
    --                         Color = "󰏘",
    --                         File = "󰈙",
    --                         Reference = "󰈇",
    --                         Folder = "󰉋",
    --                         EnumMember = "",
    --                         Constant = "󰏿",
    --                         Struct = "󰙅",
    --                         Event = "",
    --                         Operator = "󰆕",
    --                         TypeParameter = "",
    --                     }
    --                 })
    --             },
    --         })
    --     end
    -- }
}
